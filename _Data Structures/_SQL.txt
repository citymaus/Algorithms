1. What does UNION do? What is the difference between UNION and UNION ALL?
-------------------------------------
- UNION merges the contents of two structurally-compatible tables into a single combined table. The difference between UNION 
and UNION ALL is that UNION will omit duplicate records whereas UNION ALL will include duplicate records.

It is important to note that the performance of UNION ALL will typically be better than UNION, since UNION 
requires the server to do the additional work of removing any duplicates. So, in cases where is is certain that there 
will not be any duplicates, or where having duplicates is not a problem, use of UNION ALL would be recommended for performance reasons.

2. Given a table SALARIES, such as the one below, that has m = male and f = female values. Swap all f and m values (i.e., change 
all f values to m and vice versa) with a single update query and no intermediate temp table.
Id  Name  Sex  Salary
1   A     m    2500
2   B     f    1500
3   C     m    5500
4   D     f    500
--------------------------------------
UPDATE SALARIES SET sex = CASE sex WHEN 'm' THEN 'f' ELSE 'm' END


3. Considering the database schema displayed in the SQLServer-style diagram below, write a SQL query to return a list of all the invoices. 
For each invoice, show the Invoice ID, the billing date, the customer’s name, and the name of the customer who referred that 
customer (if any). The list should be ordered by billing date.
Invoices(Id, BillingDate, CustomerId), Customers(Id, Name, ReferredBy)
------------------------------------------
SELECT i.Id, i.BillingDate, c.Name, r.Name AS ReferredByName
FROM Invoices i
 JOIN Customers c ON i.CustomerId = c.Id
 LEFT JOIN Customers r ON c.ReferredBy = r.Id
ORDER BY i.BillingDate;

4. Explain joins
------------------
ANSI-standard SQL specifies five types of JOIN clauses as follows:

INNER JOIN (a.k.a. “simple join”): Returns all rows for which there is at least one match in BOTH tables. This is the default type of join 
if no specific JOIN type is specified.

LEFT JOIN (or LEFT OUTER JOIN): Returns all rows from the left table, and the matched rows from the right table; i.e., the results will 
contain all records from the left table, even if the JOIN condition doesn’t find any matching records in the right table. This means that 
if the ON clause doesn’t match any records in the right table, the JOIN will still return a row in the result for that record in the left 
table, but with NULL in each column from the right table.

RIGHT JOIN (or RIGHT OUTER JOIN): Returns all rows from the right table, and the matched rows from the left table. This is the exact 
opposite of a LEFT JOIN; i.e., the results will contain all records from the right table, even if the JOIN condition doesn’t find any 
matching records in the left table. This means that if the ON clause doesn’t match any records in the left table, the JOIN will still 
return a row in the result for that record in the right table, but with NULL in each column from the left table.

FULL JOIN (or FULL OUTER JOIN): Returns all rows for which there is a match in EITHER of the tables. Conceptually, a FULL JOIN combines 
the effect of applying both a LEFT JOIN and a RIGHT JOIN; i.e., its result set is equivalent to performing a UNION of the results of 
left and right outer queries.

CROSS JOIN: Returns all records where each row from the first table is combined with each row from the second table (i.e., returns the 
Cartesian product of the sets of rows from the joined tables). Note that a CROSS JOIN can either be specified using the CROSS JOIN 
syntax (“explicit join notation”) or (b) listing the tables in the FROM clause separated by commas without using a WHERE clause to 
supply join criteria (“implicit join notation”).

5. Write a SQL query to find the 10th highest employee salary from an Employee table. Explain your answer.
(Note: You may assume that there are at least 10 records in the Employee table.)
--------------------------------
SELECT TOP (1) Salary FROM
(
    SELECT DISTINCT TOP (10) Salary FROM Employee ORDER BY Salary DESC
) AS Emp ORDER BY Salary



6. Given the following tables:
SELECT * FROM users;
user_id  username
1        John Doe                                                                                            
2        Jane Don                                                                                            
3        Alice Jones                                                                                         
4        Lisa Romero

SELECT * FROM training_details;
user_training_id  user_id  training_id  training_date
1                 1        1            "2015-08-02"
2                 2        1            "2015-08-03"
3                 3        2            "2015-08-02"
4                 4        2            "2015-08-04"
5                 2        2            "2015-08-03"
6                 1        1            "2015-08-02"
7                 3        2            "2015-08-04"
8                 4        3            "2015-08-03"
9                 1        4            "2015-08-03"
10                3        1            "2015-08-02"
11                4        2            "2015-08-04"
12                3        2            "2015-08-02"
13                1        1            "2015-08-02"
14                4        3            "2015-08-03"
Write a query to to get the list of users who took the a training lesson more than once in the same day, 
grouped by user and training lesson, each ordered from the most recent lesson date to oldest date.
---------------------------------------------------------------------------------------------
SELECT
      u.user_id,
      username,
      training_id,
      training_date,
      count( user_training_id ) AS count
  FROM users u JOIN training_details t ON t.user_id = u.user_id
  GROUP BY user_id,
           training_id,
           training_date
  HAVING count( user_training_id ) > 1
  ORDER BY training_date DESC;
user_id  username      training_id  training_date             count
4        Lisa Romero   2            August, 04 2015 00:00:00  2
4        Lisa Romero   3            August, 03 2015 00:00:00  2
1        John Doe      1            August, 02 2015 00:00:00  3
3        Alice Jones   2            August, 02 2015 00:00:00  2


7. How can you select all the even number records from a table? All the odd number records?
--------------------------------------------
To select all the even number records from a table:
Select * from table where id % 2 = 0 

To select all the odd number records from a table:
Select * from table where id % 2 != 0