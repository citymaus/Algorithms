Big O Notation vs. Runtime

us = microseconds
ms = milliseconds
s  = seconds
m  = minutes
d  = days
y  = years

* impractical algorithm


n f(n)            lg n            n        n lg n        n^2            2^n                n!
----------------------------------------------------------------------------------------------
10                .003 us        .01 us    .033 us       .1 us         1 us            3.63 us    
20                .004 us        .02 us    .088 us       .4 us         1 us            77.1 y*
30                .005 us        .03 us    .147 us       .9 us         1 s          x 10^15 y*
40                .005 us        .04 us    .213 us       1.6 us        18.3 m              *
50                .006 us        .05 us    .282 us       2.5 us        13 d*               *
----------------------------------------------------------------------------------------------
100               .007 us        .1 us     .644 us       10 us       4 x 10^13 y*          *
1,000             .010 us        1 us      9.966 us      1 ms           *                  *
10,000            .013 us        10 us     130 us        100 ms         *                  *
100,000           .017 us        .1 ms     1.67 ms       10 s           *                  *
1,000,000         .020 us        1 ms      19.93 ms      16.7 m*        *                  *
10,000,000        .023 us        .01 s     .23 s         1.16 d*        *                  *
100,000,000       .027 us        .1 s      2.66 s        115.7 d*       *                  *
1,000,000,000     .030 us        1 s       29.9 s        31.7 y*        *                  *



---------------------------------------------
Growth rates (fastest algorithms to slowest):
---------------------------------------------
1
alpha(n)
log log n
log n / log log n
log n                    binary search
n                        n-element arrays
n log n                  quicksort / mergesort
n^2                      pairs of items: insertion sort / selection sort
n^3                        
2^n                      enumerating all subsets of n items
n!                       all permutations / orderings of n items

